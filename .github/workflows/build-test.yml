name: Build and Test

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test:unit

  lint:
    name: Check syntax with ESLint
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: ["20.x"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js for ESLint
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install ESLint Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  validate-conventional-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install commitlint
        run: npm install -g @commitlint/{cli,config-conventional}

      - name: Determine Current Branch
        id: current_branch
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"

      - name: Validate Conventional Commits
        run: commitlint --from=${{ steps.current_branch.outputs.branch }} --to=HEAD --verbose

  semantic-versioning:
    name: Semantic Versioning
    runs-on: ubuntu-latest
    needs: validate-conventional-commits
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: Generate Semantic Version
        id: semver
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
