name: Build and Test

on: 
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test:unit
  lint:
    name: Check syntax with ESLint
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: ['20.x']
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Node.js for ESLint
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install ESLint Dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
  validate-convetional-commits:
    name: Validate Convetional Commits
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Validade Convetional Commits
        run: npm run commitlint
  semantic-versioning:
    name: Sematic Versioning
    runs-on: ubuntu-latest
    needs: validate-convetional-commits

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate Sematic Version
        id: semver
        run: |
          VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | awk '{print $NF}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
